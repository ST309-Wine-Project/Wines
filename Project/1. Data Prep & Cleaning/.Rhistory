varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(type$variety[types$type == "red"], collapse = "|")), "Y", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(type$variety[types$type == "red"], collapse = "|")), "Y", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(types$variety[types$type == "red"], collapse = "|")), "Y", type))
View(varieties)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T)), "red", type))
View(types)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
sum(varieties$type == red)
sum(varieties$type == "red)
sum(varieties$type == "red")
varieties$type == "red"
sum(varieties$type == "red", rm.na = T)
?sum
sum(varieties$type == "red", na.rm = T)
?ifelse
wines$variety
wines$variety %in% varieties$variety
wines$variety %in% varieties$variety[variety$type == "red"]
wines$variety %in% varieties$variety[varieties$type == "red"]
wines$type = ifelse(wines$variety %in% varieties$variety[varieties$type = "red"], "red", NA)
wines$type = ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
View(wines)
sum(wines$type == "red", na.rm = T)
sum(wines$type == "red" & wines$taster_name = "Roger Voss", na.rm = T)
sum(wines$type == "red" & wines$taster_name == "Roger Voss", na.rm = T)
gwtwd()
getwd)
getwd()
dir()
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend = T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
#wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "white"], "white", NA)
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend = T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend == T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
nrow(filter(wines(blend = F, taster_name = "Roger Voss", type = "red")))
nrow(filter(wines,blend = F, taster_name = "Roger Voss", type = "red"))
nrow(filter(wines, blend = F, taster_name = "Roger Voss", type = "red"))
sum((wines$type = "red") & wines$blend = T & (wines$taster_name = "Roger Voss"))
sum((wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss"))
(wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss")
sum((wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss"), na.rm = T)
sum((wines$type == "red") & wines$blend == F & (wines$taster_name == "Roger Voss"), na.rm = T)
write.csv()
?write.csv
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
View(types)
# TO-DO
"
1. Implement 'type' for white wines
2. Implement 'type' for roses
3. -''- 'type' for any other type of drink ('sherry', 'cava')
4. CLEAN OUTLIERS
a. by vintage (should be more under control)
b. by price
(c. by point)
5. Sort out text fuck-ups
6. Look into the missing taster_name
"
library(tidyverse)
library(stringr)
### data inputting
wines0 <- read.csv("winemag-data-130k-v2.csv") # source: https://www.kaggle.com/zynicide/wine-reviews
types <- read.csv("./Wine Varieties by Type/red_types.csv", header = T) # source: https://en.wikipedia.org/wiki/List_of_grape_varieties
wines <- wines0 %>%
mutate(vintage = as.numeric(str_match(title, "[2|1][0-9]{3}")))
varieties <- data.frame(levels(wines$variety))
names(varieties) <- c("variety")
varieties <- varieties %>%
#detect if a blend
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
#search type explicitly
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
#search by membership in type-vector (may be redundant)
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
#search by text to capture blends, e.g. "cabernet sauvignon-syrah"
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type)) #%>%
#mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type))
#use the varieties df to incorporate type into 'wines'
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend == T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "white"], "white", NA)
write.csv(wines, "wine-data-tidied.csv")
View(varieties)
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend == T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "white"], "white", NA)
write.csv(wines, "wine-data-tidied.csv")
View(varieties)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "rose"], "rose", NA)
View(varieties)
# TO-DO
"
1. Implement 'type' for white wines
2. Implement 'type' for roses
3. -''- 'type' for any other type of drink ('sherry', 'cava')
4. CLEAN OUTLIERS
a. by vintage (should be more under control)
b. by price
(c. by point)
5. Sort out text fuck-ups
6. Look into the missing taster_name
"
library(tidyverse)
library(stringr)
### data inputting
wines0 <- read.csv("winemag-data-130k-v2.csv") # source: https://www.kaggle.com/zynicide/wine-reviews
types <- read.csv("./Wine Varieties by Type/red_types.csv", header = T) # source: https://en.wikipedia.org/wiki/List_of_grape_varieties
wines <- wines0 %>%
mutate(vintage = as.numeric(str_match(title, "[2|1][0-9]{3}")))
varieties <- data.frame(levels(wines$variety))
names(varieties) <- c("variety")
varieties <- varieties %>%
#detect if a blend
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
#search type explicitly
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
#search by membership in type-vector (may be redundant)
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
#search by text to capture blends, e.g. "cabernet sauvignon-syrah"
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type)) #%>%
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type))
#use the varieties df to incorporate type into 'wines'
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend == T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "white"], "white", NA)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "rose"], "rose", NA)
write.csv(wines, "wine-data-tidied.csv")
# TO-DO
"
1. Implement 'type' for white wines
2. Implement 'type' for roses
3. -''- 'type' for any other type of drink ('sherry', 'cava')
4. CLEAN OUTLIERS
a. by vintage (should be more under control)
b. by price
(c. by point)
5. Sort out text fuck-ups
6. Look into the missing taster_name
"
library(tidyverse)
library(stringr)
### data inputting
wines0 <- read.csv("winemag-data-130k-v2.csv") # source: https://www.kaggle.com/zynicide/wine-reviews
types <- read.csv("./Wine Varieties by Type/red_types.csv", header = T) # source: https://en.wikipedia.org/wiki/List_of_grape_varieties
wines <- wines0 %>%
mutate(vintage = as.numeric(str_match(title, "[2|1][0-9]{3}")))
varieties <- data.frame(levels(wines$variety))
names(varieties) <- c("variety")
varieties <- varieties %>%
#detect if a blend
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
#search type explicitly
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
#search by membership in type-vector (may be redundant)
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
#search by text to capture blends, e.g. "cabernet sauvignon-syrah"
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type)) #%>%
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "white"], collapse = "|"), ignore_case = T))), "white", type))
#use the varieties df to incorporate type into 'wines'
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend == T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "white"], "white", NA)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "rose"], "rose", NA)
write.csv(wines, "wine-data-tidied.csv")
View(varieties)
