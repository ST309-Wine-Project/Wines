varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(type$variety[types$type == "red"], collapse = "|")), "Y", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(type$variety[types$type == "red"], collapse = "|")), "Y", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(types$variety[types$type == "red"], collapse = "|")), "Y", type))
View(varieties)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T)), "red", type))
View(types)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
sum(varieties$type == red)
sum(varieties$type == "red)
sum(varieties$type == "red")
varieties$type == "red"
sum(varieties$type == "red", rm.na = T)
?sum
sum(varieties$type == "red", na.rm = T)
?ifelse
wines$variety
wines$variety %in% varieties$variety
wines$variety %in% varieties$variety[variety$type == "red"]
wines$variety %in% varieties$variety[varieties$type == "red"]
wines$type = ifelse(wines$variety %in% varieties$variety[varieties$type = "red"], "red", NA)
wines$type = ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
View(wines)
sum(wines$type == "red", na.rm = T)
sum(wines$type == "red" & wines$taster_name = "Roger Voss", na.rm = T)
sum(wines$type == "red" & wines$taster_name == "Roger Voss", na.rm = T)
gwtwd()
getwd)
getwd()
dir()
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend = T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
#wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "white"], "white", NA)
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend = T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend == T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
nrow(filter(wines(blend = F, taster_name = "Roger Voss", type = "red")))
nrow(filter(wines,blend = F, taster_name = "Roger Voss", type = "red"))
nrow(filter(wines, blend = F, taster_name = "Roger Voss", type = "red"))
sum((wines$type = "red") & wines$blend = T & (wines$taster_name = "Roger Voss"))
sum((wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss"))
(wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss")
sum((wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss"), na.rm = T)
sum((wines$type == "red") & wines$blend == F & (wines$taster_name == "Roger Voss"), na.rm = T)
write.csv()
?write.csv
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
encoding_errors <- read.csv"./Encoding Errors/Encoding Error List.csv"
encoding_errors <- read.csv("./Encoding Errors/Encoding Error List.csv")
View(encoding_errors)
?repair_encoding
??repair_encoding()
install.packages("stringi")
repair_encoding(wines$taster_name)
library(stringi)
repair_encoding(wines$taster_name)
install.packages("rvest")
library(rvest)
repair_encoding(wines$taster_name)
repair_encoding(varieties$variety)
View(data.frame(varieties$variety, repair_encoding(varieties$variety)))
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old == variety_fix
index
index = variety_old != variety_fix
index
View(variety_old[index], variety_fix[index])
View(data.frame(variety_old[index], variety_fix[index]))
ies$variety
variety_fix = repair_encoding(variety_old)
index = variety_old != variety_fix
variety_manual = data.frame(variety_old[index], variety_fix[index])
View(variety_manual)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
variety_manual = data.frame(variety_old[index], variety_fix[index], rep(F, sum(index)))
View(variety_manual)
variety_manual = variety_manual[]
variety_manual[8,3] = T
View(variety_manual)
variety_manual[8,3] = T ; variety_manual[10,3] = T ; variety_manual[10,3] = T
View(variety_manual)
variety_manual[8,3] = T ; variety_manual[10,3] = T ; variety_manual[10,3] = T
variety_manual[63,3] = T ; variety_manual[24,3] = T
names(variety_manual) = c("origina", "fixed", "manual")
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old != variety_fix
variety_manual = data.frame(variety_old[index], variety_fix[index], rep(F, sum(index)))
names(variety_manual) = c("origina", "fixed", "manual")
View(variety_manual) # identify manual errors
variety_manual[8,3] = T ; variety_manual[10,3] = T ; variety_manual[10,3] = T
variety_manual[63,3] = T ; variety_manual[24,3] = T
View(variety_manual[variety_manual$manual])
View(variety_manual[variety_manual$manual])
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old != variety_fix
variety_fix = data.frame(variety_old[index], variety_fix[index], rep(F, sum(index)))
names(variety_fix) = c("origina", "fixed", "manual")
View(variety_fix) # identify manual errors
variety_fix[8,3] = T ; variety_fix[10,3] = T ; variety_fix[10,3] = T
variety_fix[63,3] = T ; variety_fix[24,3] = T
View(variety_fix[variety_fix$manual])
names(variety_fix) = c("original", "fixed", "manual")
View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
variety_fix[8,2] =
variety_fix[10,2] = "Boğazkere"
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old != variety_fix
variety_fix = data.frame(variety_old[index], variety_fix[index], rep(F, sum(index)))
names(variety_fix) = c("original", "fixed", "manual")
View(variety_fix) # identify manual errors
variety_fix[8,3] = T ; variety_fix[10,3] = T
variety_fix[63,3] = T ; variety_fix[24,3] = T
View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
variety_fix[10,2] = "Boğazkere"
variety_fix[8,2] =
variety_fix[10,2] = as.factor("Boğazkere")
##variety_fix[8,2] =
variety_fix[10,2] = as.factor("Boğazkere")
variety_fix$fixed = as.character(variety_fix$fixed)
##variety_fix[8,2] =
variety_fix[10,2] = "Boğazkere"
##variety_fix[8,2] =
variety_fix[10,2] = "Boğazkere"
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old != variety_fix
variety_fix = data.frame(variety_old[index], variety_fix[index], rep(F, sum(index)))
names(variety_fix) = c("original", "fixed", "manual")
View(variety_fix) # identify manual errors
variety_fix[8,3] = T ; variety_fix[10,3] = T
variety_fix[63,3] = T ; variety_fix[24,3] = T
View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
variety_fix$fixed = as.character(variety_fix$fixed)
##variety_fix[8,2] =
variety_fix[10,2] = "Boğazkere"
#variety_fix[62,2] =
#variety_fix[24,2] =
variety_fix$fixed = as.character(variety_fix$fixed)
variety_fix[8,2] = "Babić"
variety_fix[10,2] = "Boğazkere"
variety_fix[62,2] = "Fetească Regală"
variety_fix[24,2] = "Tămâioasă Românească"
variety_fix$fixed = as.factor(variety_fix$fixed)
View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
variety_fix[8,2] = "Babić"
variety_fix[10,2] = "Boğazkere"
variety_fix[62,2] = "Fetească Regală"
variety_fix[24,2] = "Tămâioasă Românească"
View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old != variety_fix
variety_fix = data.frame(variety_old[index], variety_fix[index], rep(F, sum(index)))
names(variety_fix) = c("original", "fixed", "manual")
View(variety_fix) # identify manual errors
variety_fix[8,3] = T ; variety_fix[10,3] = T
variety_fix[24,3] = T ; variety_fix[63,3] = T
View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
variety_fix$fixed = as.character(variety_fix$fixed)
variety_fix[8,2] = "Babić"
variety_fix[10,2] = "Boğazkere"
variety_fix[24,2] = "Tămâioasă Românească"
variety_fix[63,2] = "Fetească Regală"
variety_fix$fixed = as.factor(variety_fix$fixed)
View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
levels(wine$variety)
levels(wines$variety)
varieties$variety[index] #= variety_fix$fixed
varieties$variety[index] = variety_fix$fixed
?mapvalues
??mapvalues
mapvalues(varieties$variety, variety_fix$original, variety_fix$fixed)
library(tidyverse)
library(stringr)
library(stringi) #string functionality for wrapper in rvest
library(rvest) #
mapvalues(varieties$variety, variety_fix$original, variety_fix$fixed)
?recode
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old != variety_fix
variety_fix = data.frame(variety_old[index], variety_fix[index], rep(F, sum(index)))
names(variety_fix) = c("original", "fixed", "manual")
View(variety_fix) # identify manual errors
variety_fix[8,3] = T ; variety_fix[10,3] = T
variety_fix[24,3] = T ; variety_fix[63,3] = T
#~View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
variety_fix$fixed = as.character(variety_fix$fixed)
variety_fix[8,2] = "Babić"
variety_fix[10,2] = "Boğazkere"
variety_fix[24,2] = "Tămâioasă Românească"
variety_fix[63,2] = "Fetească Regală"
variety_fix$fixed = as.factor(variety_fix$fixed)
#~View(data.frame(variety_fix$original[variety_fix$manual], variety_fix$fix[variety_fix$manual]))
varieties$variety = to.character(varieties$variety)
varieties$variety[varieties$variety %in% variety_fix$original] = variety_fix$fixed
varieties$variety = to.factor(varieties$variety)
varieties$variety = as.character(varieties$variety)
varieties$variety[varieties$variety %in% variety_fix$original] = variety_fix$fixed
varieties$variety = as.factor(varieties$variety)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', encoding = 'UTF-8', echo=TRUE)
varieties$variety = as.character(varieties$variety)
varieties$variety[varieties$variety %in% variety_fix$original]
index
sum(index)
varieties$variety[varieties$variety %in% variety_fix$original]
variety_fix$fixed
varieties$variety[varieties$variety %in% variety_fix$original] = variety_fix$fixed
varieties$variety[varieties$variety %in% variety_fix$original] = variety_fix$fixed
varieties$variety[varieties$variety %in% variety_fix$original] = as.character(variety_fix$fixed()
varieties$variety[varieties$variety %in% variety_fix$original] = as.character(variety_fix$fixed)
varieties$variety[index] = as.character(variety_fix$fixed)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', encoding = 'UTF-8', echo=TRUE)
varieties$variety = as.factor(varieties$variety)
levels(wines$variety)
varieties$variety
levels(wines$variety) = varieties$variety
levels(wines$taster_name)[levels(wines$taster_name) == "Kerin Oâ€™Keefe"]
levels(wines$taster_name)[levels(wines$taster_name) == "Kerin Oâ€™Keefe"] = "Kerin O'Keefe"
View(wines)
levels(wines$designation)
levels(wines$winery)
levels(wines$region_1)
wines$designation = repair_encoding(wines$designation)
wines$designation = repair_encoding(wines$designation)
wines$title = repair_encoding(wines$title)
wines$province = repair_encoding(wines$province)
wines$region_1 = repair_encoding(wines$region_1)
wines$region_2 = repair_encoding(wines$region_2)
wines$winery = repair_encoding(wines$winery)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', encoding = 'UTF-8', echo=TRUE)
View(wines)
wines0
View(wines0)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
wines$winery = repair_encoding(wines$winery)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
wines$winery = repair_encoding(wines$winery)
wines$designation = repair_encoding(wines$designation)
wines$title = repair_encoding(wines$title)
wines$province = repair_encoding(wines$province)
wines$region_1 = repair_encoding(wines$region_1)
wines$region_2 = repair_encoding(wines$region_2)
wines$winery = repair_encoding(wines$winery)
source('C:/Projects/ST309 - Wines/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
wines$winery = repair_encoding(wines$winery)
View(wines)
levels(wines$taster_name)[levels(wines$taster_name) == "Kerin OÃ¢â¬â¢Keefe"] = "Kerin O'Keefe"
view(wines)
View(wines)
View(wines)
levels(wines$taster_name)[levels(wines$taster_name) == "Kerin Oâ€™Keefe"] = "Kerin O'Keefe"
