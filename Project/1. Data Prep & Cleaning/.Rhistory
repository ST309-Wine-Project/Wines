varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(type$variety[types$type == "red"], collapse = "|")), "Y", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(type$variety[types$type == "red"], collapse = "|")), "Y", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, paste(types$variety[types$type == "red"], collapse = "|")), "Y", type))
View(varieties)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse(str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T)), "red", type))
View(types)
varieties <- varieties %>%
mutate(blend = str_detect(variety, "-") | str_detect(variety, "(?i)blend")) %>%
mutate(type = tolower(str_match(variety, "(?i)white"))) %>%
mutate(type = ifelse(is.na(type), tolower(str_match(variety, "(?i)red")), type)) %>%
mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "red"]), "red", type)) %>%
#mutate(type = ifelse((is.na(type) & variety %in% types$variety[types$type == "white"]), "white", type)) # to be implemented
mutate(type = ifelse((is.na(type) & str_detect(variety, regex(paste(types$variety[types$type == "red"], collapse = "|"), ignore_case = T))), "red", type))
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/EDA - Niclas/Script1.R', echo=TRUE)
sum(varieties$type == red)
sum(varieties$type == "red)
sum(varieties$type == "red")
varieties$type == "red"
sum(varieties$type == "red", rm.na = T)
?sum
sum(varieties$type == "red", na.rm = T)
?ifelse
wines$variety
wines$variety %in% varieties$variety
wines$variety %in% varieties$variety[variety$type == "red"]
wines$variety %in% varieties$variety[varieties$type == "red"]
wines$type = ifelse(wines$variety %in% varieties$variety[varieties$type = "red"], "red", NA)
wines$type = ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
View(wines)
sum(wines$type == "red", na.rm = T)
sum(wines$type == "red" & wines$taster_name = "Roger Voss", na.rm = T)
sum(wines$type == "red" & wines$taster_name == "Roger Voss", na.rm = T)
gwtwd()
getwd)
getwd()
dir()
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend = T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
#wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "white"], "white", NA)
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend = T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
wines$blend <- ifelse(wines$variety %in% varieties$variety[varieties$blend == T], T, F)
wines$type <- ifelse(wines$variety %in% varieties$variety[varieties$type == "red"], "red", NA)
nrow(filter(wines(blend = F, taster_name = "Roger Voss", type = "red")))
nrow(filter(wines,blend = F, taster_name = "Roger Voss", type = "red"))
nrow(filter(wines, blend = F, taster_name = "Roger Voss", type = "red"))
sum((wines$type = "red") & wines$blend = T & (wines$taster_name = "Roger Voss"))
sum((wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss"))
(wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss")
sum((wines$type == "red") & wines$blend == T & (wines$taster_name == "Roger Voss"), na.rm = T)
sum((wines$type == "red") & wines$blend == F & (wines$taster_name == "Roger Voss"), na.rm = T)
write.csv()
?write.csv
source('C:/Users/nicla/OneDrive - London School of Economics/ST309 Project/Wine Analysis/Project/1. Data Prep & Cleaning/Script1.R', echo=TRUE)
encoding_errors <- read.csv"./Encoding Errors/Encoding Error List.csv"
encoding_errors <- read.csv("./Encoding Errors/Encoding Error List.csv")
View(encoding_errors)
?repair_encoding
??repair_encoding()
install.packages("stringi")
repair_encoding(wines$taster_name)
library(stringi)
repair_encoding(wines$taster_name)
install.packages("rvest")
library(rvest)
repair_encoding(wines$taster_name)
repair_encoding(varieties$variety)
View(data.frame(varieties$variety, repair_encoding(varieties$variety)))
variety_old = varieties$variety
variety_fix = repair_encoding(variety_old)
index = variety_old == variety_fix
index
index = variety_old != variety_fix
index
View(variety_old[index], variety_fix[index])
View(data.frame(variety_old[index], variety_fix[index]))
